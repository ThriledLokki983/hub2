@import-normalize;

@import 'utility/variables';
@import 'utility/functions';
@import 'utility/mixins';
@import 'utility/font-imports';
@import 'utility/font-mixins';


/**
 * Core
 */
:root {
    margin: 0;
    box-sizing: border-box;
    font-size: 16px; quotes: '“' '”' '‘' '’';
    scroll-padding-top: $header-mobile-height + $gutter;
    scroll-behavior: smooth; accent-color: $primary-color;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    @include regular-text;
    margin: 0; padding: 0;
    overflow-x: hidden;
    background: $background-color; color: $text-color;
    font-family: $body-font; line-height: 1.5; letter-spacing: -0.025em;
    transition: background 0.25s ease;
}
body[data-color-scheme="inverted"] {
    transition: background 0.25s ease;
    @include bp-min($medium) {
        background: $whitish;
    }
}
body[data-route="home"][data-color-scheme="inverted"] {
    background: $whitish; // Force whitish backgrond on mobile home.
}
body[data-has-fixed-scrollbar="true"] {
    @include bp-min($medium) {
        overflow-y: scroll;
    }
}

mark {
    background-color: $warning-color-light;
}

/**
 * Helpers
 */
[tabindex="-1"] {
    outline: none;
}

button {
    user-select: none;
}
button[disabled] {
    cursor: not-allowed !important;
}

[data-hide="mobile"] {
    @include bp-max($medium) {
        display: none !important;
    }
}

[data-color="success"] {
    color: $success-color;
}
[data-color="warning"] {
    color: $warning-color;
}
[data-color="error"] {
    color: $error-color;
}

/**
 * Variables for usages in JS
 */
:root {

    --primary-color-light: #{$primary-color-light};
    --primary-color-medium: #{$primary-color-medium};
    --primary-color-regular: #{$primary-color-regular};
    --primary-color-dark: #{$primary-color-dark};

    --breakpoint-tiny: #{$tiny};
    --breakpoint-small: #{$small};
    --breakpoint-medium: #{$medium};
    --breakpoint-large: #{$large};
    --breakpoint-huge: #{$huge};

    --right-sidebar-breakpoint: #{$right-sidebar-transition-breakpoint};

}

/**
 * Register custom properties
 */
@property --angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0deg;
}

@property --number {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

/**
 * Primers
 */
@import 'primer/forms';
@import 'primer/headings';
@import 'primer/hr';
@import 'primer/links';
@import 'primer/media';
@import 'primer/paragraphs';
@import 'primer/tooltip';
