@import '../../styles/utils';
@import './Journey.module.scss';

.taskListContainer {
  @extend .sectionContainer;
}

.taskListCard {
  @extend .card;
}

.taskItem {
  display: flex;
  align-items: center;
  padding: $spacing-sm $spacing-sm;
  margin-bottom: $spacing-xs;
  border-bottom: 1px solid $divider;
  border-radius: 8px;
  transition: all 0.2s ease-out;
  position: relative;

  /* Subtle left highlight for pending tasks that need action */
  &:not(.completedTask) {
    border-left: 2px solid rgba($primary, 0.2);

    &:hover {
      border-left-color: rgba($primary, 0.5);
      background-color: rgba($divider, 0.1);
    }
  }

  &:hover {
    background-color: rgba($divider, 0.2);
  }
}

.taskItem:last-child {
  border-bottom: none;
}

.taskCheckbox {
  margin-right: $spacing-md;
  appearance: none;
  width: 24px;
  height: 24px;
  border: 2px solid $primary;
  border-radius: 12px;
  position: relative;
  cursor: pointer;
  flex-shrink: 0;
  transition: all 0.2s ease-out;

  &:hover {
    background-color: rgba($primary, 0.05);
    transform: scale(1.05);
  }

  &:checked {
    background-color: $primary;
    border-color: $primary;
    box-shadow: 0 0 0 2px rgba($primary, 0.2);

    &::after {
      content: '✓';
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      color: white;
      font-size: 14px;
      font-weight: bold;
    }
  }

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;

    /* Only style as checked when it actually is checked */
    &:not(:checked) {
      background-color: transparent;
      border-color: $primary;
      box-shadow: none;
      &::after {
        content: none;
      }
    }

    &:checked {
      box-shadow:
        0 0 0 2px rgba($primary, 0.2),
        0 1px 3px rgba(0, 0, 0, 0.1);
      animation: checkPulse 1s ease-out;
    }

    &::after {
      content: '✓';
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      color: white;
      font-size: 14px;
      font-weight: bold;
      animation: checkmark 0.3s ease-in-out;
    }
  }

  @keyframes checkPulse {
    0% {
      box-shadow: 0 0 0 0 rgba($primary, 0.4);
    }
    70% {
      box-shadow: 0 0 0 6px rgba($primary, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba($primary, 0);
    }
  }

  @keyframes checkmark {
    0% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(0.5);
    }
    70% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1.2);
    }
    100% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  }

  .completedAction {
    display: flex;
    align-items: center;
    gap: 8px;
    color: $primary;
    padding: 6px 12px;
    background-color: rgba($primary, 0.08);
    border: 1px solid rgba($primary, 0.15);
    border-radius: 10px;
    font-size: 14px;
    font-weight: 500;
    opacity: 0.8;

    svg {
      width: 16px;
      height: 16px;
      stroke: currentColor;
    }
  }
}

.taskContent {
  flex: 1;
}

.taskTitle {
  font-weight: 500;
  margin-bottom: 4px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;

  &.completed {
    text-decoration: line-through;
    color: $text-secondary;
  }
}

.taskStatusLabel {
  font-size: 12px;
  color: $primary;
  font-weight: 600;
  background-color: rgba($primary, 0.08);
  padding: 2px 6px;
  border-radius: 10px;
  margin-left: 4px;
}

.taskMeta {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  font-size: 12px;
  color: $text-secondary;

  svg {
    width: 16px;
    height: 16px;
    stroke: currentColor;
  }
}

.taskDueDate {
  display: flex;
  align-items: center;
  gap: 4px;

  &.overdue {
    color: $alert;
  }
}

.taskMilestone {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 2px 8px;
  background-color: rgba($primary, 0.1);
  border-radius: 12px;
  color: $primary;
}

.emptyState {
  text-align: center;
  padding: $spacing-lg 0;
  color: $text-secondary;
}

.button {
  color: $primary;
  background-color: rgba($primary, 0.03);
  border: 1px solid rgba($primary, 0.3);
  cursor: pointer;
  padding: 8px 16px;
  font-size: 14px;
  font-weight: 500;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 8px;
  border-radius: 10px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);

  &:hover {
    background-color: rgba($primary, 0.08);
    transform: translateY(-1px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }

  svg {
    width: 16px;
    height: 16px;
    stroke: currentColor;
  }

  &:hover {
    color: darken($primary, 10%);
    background-color: rgba($primary, 0.05);
    border-color: rgba($primary, 0.5);
  }

  &:active {
    transform: translateY(1px);
  }

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgba($primary, 0.2);
  }
}

.buttonText {
  @extend .button;
}

.documentCount {
  display: flex;
  align-items: center;
  gap: 4px;
}

.completedTask {
  background-color: rgba($primary, 0.08);
  border-radius: 12px;
  transition: all 0.2s ease-out;
  border-left: 3px solid $primary;
  position: relative;
  overflow: hidden;
  opacity: 0.85;

  // Subtle strikethrough effect using a pseudo-element line
  .taskTitle {
    position: relative;

    &::after {
      content: '';
      position: absolute;
      left: 0;
      top: 50%;
      height: 1px;
      width: 100%;
      background-color: rgba($primary, 0.4);
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }
  }

  // Show the line on completed task
  .completed::after {
    transform: scaleX(1);
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, transparent, rgba($primary, 0.05) 25%, transparent 50%);
    z-index: 0;
  }
}

.completedBadge {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 4px 12px;
  background-color: rgba($primary, 0.15);
  border: 1px solid rgba($primary, 0.3);
  border-radius: 12px;
  color: $primary;
  font-weight: 600;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
  animation: fadeIn 0.3s ease-out;
  margin-left: 8px;

  svg {
    width: 14px;
    height: 14px;
    stroke-width: 2.5px;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
