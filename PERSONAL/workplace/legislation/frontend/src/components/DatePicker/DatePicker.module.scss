@import '../../styles/utils';

.root {
    position: relative; max-inline-size: 50%; display: inline-block;

    &[data-disabled="true"] {
        pointer-events: none;

        > label > span:first-of-type,
        > span {
            opacity: 0.5;

            label[data-not-applicable] {
                opacity: 1 !important;
            }
        }

        > input {
            cursor: not-allowed;
        }

        @include hover {
            cursor: not-allowed;
        }
    }

    &[data-allow-edit="false"] {
        opacity: 0.85;

        > label,
        > input {
            pointer-events: none; cursor: not-allowed; opacity: 0.95;


        }

        @include hover {
            cursor: not-allowed;
        }
    }

    > svg {
        position: absolute; inset: 2.1rem 0.75rem auto auto; z-index: 0;
        pointer-events: none; inline-size: 1.2rem; block-size: 1.2rem;
        fill: $grey-lightest !important;
    }

    &[data-has-sub-label="true"] {
        display: flex; flex-direction: column; align-items: flex-start;
        max-inline-size: 100%;

        > span[data-sub-label="true"] {
            margin-block-end: 0.5rem; color: rgba($text-color-light, 0.95);
        }

        > input {
            max-inline-size: 50%;
        }

        > svg {
            inset: 4rem 52% auto auto;
        }
    }
}
.root label[data-not-applicable] {
    margin-block-end: 0 !important; inline-size: 116px !important;
}
.root[data-has-sub-label="true"] > span {
    @include medium-text;
}

/**
* Input and Labels
*/
.root label {
    @include medium-text;
}
.root label {
    padding-inline-start: 0.05rem; text-align: left;
    position: relative; color: $blue; font-weight: $font-weight-medium;
    text-transform: uppercase; margin-block-end: 0; inline-size: 100%;
    display: flex; align-items: flex-end; justify-content: space-between;

    &[data-required="true"]::after {
        content: "*"; color: $error-color;
        opacity: 0.75; padding-inline-start: 5px;
    }
}
.root:not(:has([data-subtitle="true"])) label {
    margin-block-end: 0.25rem;

    > span {
        color: $blue; opacity: 1;
        transition: opacity 200ms ease-in;
    }
}

.root input[type="date"] {
    background-color: $grey-light; padding: 0.85rem 0.75rem;
    border: none; box-shadow: none;

    &[disabled] {
        background-color: rgba($grey-lightest, 0.2);
        opacity: 0.3; cursor: not-allowed;
    }

    &[data-input-error="true"] {
        box-shadow:
            inset 0 0 0 .0625rem rgba($error-color, 0.5),
            0 0 0 .25rem rgba($error-color, 0.12);
    }

    /* For Chrome, Safari, and Opera */
    &::-webkit-calendar-picker-indicator {
        display: none;
        -webkit-appearance: none;
    }

    /* For Firefox */
    /* For Internet Explorer and Edge */
    &::-moz-calendar-picker-indicator,
    &::-ms-clear {
        display: none;
    }
}
.root > input::placeholder {
    color: $grey-lightest; opacity: 0.7; font-size: 13px;
}


.root__date {
    position: relative;
    display: flex; flex-direction: column; color: rgb(75 85 99 / 0.95);

    &[data-disabled="true"] > *:not([data-checkbox="true"]) {
        pointer-events: none; opacity: 0.5; cursor: not-allowed;

        > .root__data_label,
        .root__data_text {
            opacity: 0.5;
        }
    }

    .react-aria-Group {
        display: flex;
        width: fit-content;
        align-items: center;
    }

    > span.root__data_label:first-of-type {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        position: relative;
        color: #415385;
        font-weight: 500;
        text-transform: uppercase;
        margin-block-end: 0;
        text-align: left;
    }

    > span:nth-of-type(2) {
        color: #8C8C8C;
        margin: 0;
        text-transform: none;
        text-align: left;
        font-size: 0.9rem; margin-block-end: 0.25rem;
    }

    &[data-variation="alternate"] {
        > div {
            > div {
                background-color: $white !important; border-radius: $border-radius;
            }

            > button {
                background-color: $white !important;
            }
        }
    }

    > div {
        display: flex; inline-size: 100%;

        > button {
            color: #f3f3f3;
            background-color: #f3f3f3 !important;
            border-bottom-left-radius: 0; border-top-left-radius: 0;
            min-inline-size: 3rem; padding: 0 0.5rem !important; transform: translateX(-5px);

            forced-color-adjust: none; appearance: none; cursor: pointer;
            border: none; font-size: 0.857rem; box-sizing: content-box;

            > svg {
                inline-size: 1.25rem; block-size: 1.25rem;
                fill: #494747 !important;
            }

            &[data-pressed] {
                box-shadow: none; background: $primary-color-light;
            }
        }

        > div {
            display: flex; padding: 1rem 1.25rem; inline-size: 50%;
            background-color: #f3f3f3; border-radius: 4px;
        }
    }
}

.root__dialog {
    opacity: 1;
    max-height: inherit; box-sizing: border-box; outline: none;
    padding: 1rem 1.25rem; overflow: auto; background-color: $white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: $border-radius;
}
.root__dialog.open {
    display: block; /* Show when open */
    opacity: 1;
    transform: translateY(0);
}

.root__calendar {
    color: rgb(75 85 99 / 0.95);
    width: fit-content; max-width: 100%;

    > header {
        display: flex; justify-content: space-between; align-items: center; gap: 1.25rem;

        > h2 {
            @include h4; margin: 0;

        }

        > button {
            min-inline-size: 3rem; padding: 0.5rem 0.75rem !important;
            display: flex; place-content: center; place-items: center;
            background-color: rgba(65, 83, 133, 0.04) !important;

            &:last-of-type > svg {
                transform: rotate(180deg);
            }
        }
    }

    > table {
        inline-size: 100%; border-collapse: collapse; margin-block: 1.25rem 0.75rem;

        thead > tr {
            margin-block-end: 0.5rem;
        }

        tr {
            display: flex; inline-size: 100%;

            > th {
                flex: 1; inline-size: 1.75rem;
            }

            td {
                min-inline-size: 1.75rem; display: flex; place-content: center; flex: 1;

                > div {
                    inline-size: 2rem; block-size: 2rem; display: flex;
                    place-content: center; place-items: center; border-radius: 100%;
                    cursor: pointer;
                }

                @include hover {
                    background-color: $primary-color-light; border-radius: $border-radius-x-large;
                    cursor: pointer; opacity: 0.7;
                }

                &[data-focus-visible="true"],
                &[data-focused="true"] {
                    outline: 1px solid $primary-color-light;
                }
            }
        }
    }
}


.root__entering {
    animation: fade-in 200ms ease-out;
    overflow: auto; border-radius: 4px;

}

.root__enter {
    overflow: auto; border-radius: 4px;
}

.root__exiting {
    animation: fade-out 200ms ease-in;
    overflow: auto; border-radius: 4px;
}

.root__exit {
    overflow: auto; border-radius: 4px;
}

@keyframes fade-out {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}


@keyframes fade-in {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
