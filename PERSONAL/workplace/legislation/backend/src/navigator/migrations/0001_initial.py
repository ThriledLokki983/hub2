# Generated by Django 4.2.13 on 2024-06-17 11:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profiles', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeographicalScope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Select the area where the law applies ', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IssuingJurisdiction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Select the country or jurisdiction that issued the legislation', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Legislation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name_local', models.CharField(help_text='Name of legislation in the original language', max_length=255, unique=True)),
                ('abbreviation', models.CharField(blank=True, help_text='If applicable, the common abbreviation used for this legislation', max_length=255, null=True, unique=True)),
                ('name_generic', models.CharField(blank=True, help_text='If applicable, the common English translation for this (type) of legislation', max_length=255, null=True)),
                ('effective_date', models.DateField(help_text='Select the date as of when the legislation is or will be first applicable', verbose_name='Effective Date')),
                ('effective_until', models.DateField(blank=True, default=None, help_text='If applicable, select the end date of the legislation.', null=True, verbose_name='Effective Date Until')),
                ('is_in_effect', models.BooleanField(default=False, help_text='If the legislation has been put into effect', verbose_name='In effect')),
                ('responsible_authority', models.TextField(help_text='Specify which authority is responsible for the enforcement of this legislation', null=True, verbose_name='Responsible Authority')),
                ('summary', models.TextField(help_text='Short summary of the objective/ goal of the legislation', verbose_name='Objective of the legislation (summary)')),
                ('scope', models.TextField(help_text='Short summary on the relevant definitions regarding the activities that                 trigger the applicability of the legislation', verbose_name='Scope of the legislation (summary)')),
                ('responsible_party', models.TextField(help_text='Short summary on who is defined within the legislation as the parties (i.e. economic operators)                to whom the legislation applies', null=True, verbose_name='Responsible party (summary)')),
                ('link', models.TextField(help_text='Include a weblink to the legislation', verbose_name='Link to legislation')),
                ('additional_link', models.TextField(blank=True, default=None, help_text='Include a weblink to the guidance', null=True, verbose_name='Additional guidance links relating to to legislation')),
                ('preparation_state', models.CharField(choices=[('CREATED', 'CREATED'), ('IN_REVIEW', 'IN REVIEW'), ('PUBLISHED', 'PUBLISHED')], default='CREATED', max_length=20)),
                ('status', models.CharField(choices=[('IN EFFECT', 'IN EFFECT'), ('PENDING', 'PENDING'), ('OUTDATED', 'OUTDATED')], default='IN EFFECT', max_length=20)),
                ('review_cadence_months', models.IntegerField(default=6)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_legislations', to=settings.AUTH_USER_MODEL)),
                ('geographical_scope', models.ManyToManyField(help_text='Select the area where the law applies', related_name='geographical_scope', to='navigator.geographicalscope', verbose_name='Geographical Scope')),
                ('issuing_jurisdiction', models.ManyToManyField(help_text='Select the country or jurisdiction that issued the legislation', related_name='issuing_jurisdiction', to='navigator.issuingjurisdiction', verbose_name='Issuing Jurisdiction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegislationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='For example Regulation, Directive, Act, Decree, etc', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NonComplianceConsequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Select the relevant consequences that may follow from non-compliance with this legislation', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='If applicable, specify whether the legislation applies to specific products and/ or services', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(help_text='A general high-level description on the registration requirements', verbose_name='General description')),
                ('responsible_authority', models.TextField(help_text='The authority defined in the legislation as the responsible authority for                 the enforcement of the regulatory requirements', verbose_name='Responsible authority')),
                ('trigger', models.TextField(help_text='A description of the activities that will trigger the obligation to comply                 with the registration requirements', verbose_name='Activities that trigger requirements')),
                ('responsible_party', models.TextField(help_text='Defined within the legislation as the economic operator that must comply                 with the registration requirements', verbose_name='Responsible party')),
                ('data_elements', models.TextField(help_text='Specific information necessary to submit the registration application.                 Should be in bullet format', verbose_name='Data elements required')),
                ('payment_obligations', models.TextField(blank=True, help_text='If applicable, a description of the fee or contribution that must be paid for the registration', null=True, verbose_name='Payment obligations')),
                ('deadline', models.TextField(blank=True, help_text='The due date by which the responsible party must comply with the registration requirements', null=True, verbose_name='Deadline')),
                ('threshold', models.TextField(blank=True, help_text='If applicable, the minimum criteria that must be met before the registration requirements apply,                 as well as phase-in provisions', null=True, verbose_name='Threshold')),
                ('sanctions', models.TextField(blank=True, help_text='If applicable, the penalties or consequences imposed as a result of non-compliance', null=True, verbose_name='Sanctions')),
                ('exemptions', models.TextField(blank=True, help_text='If applicable, the specific conditions under which the registration requirements do not apply', null=True, verbose_name='Exemptions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegulatoryRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(help_text='A general high-level description on the regulatory requirements', verbose_name='General description')),
                ('responsible_authority', models.TextField(help_text='The authority defined in the legislation as the responsible authority for                 the enforcement of the regulatory requirements', verbose_name='Responsible authority')),
                ('trigger', models.TextField(help_text='A description of the activities that will trigger the obligation to comply                 with the regulatory requirements', verbose_name='Activities that trigger requirements')),
                ('responsible_party', models.TextField(help_text='Defined within the legislation as the economic operator that must comply                 with the regulatory requirements', verbose_name='Responsible party')),
                ('key_actions', models.TextField(help_text='If applicable, actions that the responsible party must take to ensure                 compliance with the regulatory requirements', verbose_name='Key actions for compliance')),
                ('deadline', models.TextField(blank=True, help_text='The due date by which the responsible party must comply with the regulatory requirements', null=True, verbose_name='Deadline')),
                ('threshold', models.TextField(blank=True, help_text='If applicable, the minimum criteria that must be met before the regulatory requirements apply,                 as well as phase-in provisions', null=True, verbose_name='Threshold')),
                ('sanctions', models.TextField(blank=True, help_text='If applicable, the penalties or consequences imposed as a result of non-compliance', null=True, verbose_name='Sanctions')),
                ('exemptions', models.TextField(blank=True, help_text='If applicable, the specific conditions under which the regulatory requirements do not apply', null=True, verbose_name='Exemptions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Topic category, such as sustainability topic of                 Workers in the value chain or Plastics Packaging', max_length=255, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WayOfSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Select the relevant ways of submitting', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportingRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(help_text='A general high-level description on the reporting requirements', verbose_name='General description')),
                ('responsible_authority', models.TextField(help_text='The authority defined in the legislation as the responsible authority for                 the enforcement of the reporting requirements', verbose_name='Responsible authority')),
                ('trigger', models.TextField(help_text='A description of the activities that will trigger the obligation to comply                 with the reporting requirements', verbose_name='Activities that trigger requirements')),
                ('responsible_party', models.TextField(help_text='Defined within the legislation as the economic operator that must comply                 with the reporting requirements', verbose_name='Responsible party')),
                ('data_elements', models.TextField(blank=True, help_text='Specific information necessary to submit the reporting application.                 Should be in bullet format', null=True, verbose_name='Data elements required')),
                ('language', models.TextField(blank=True, help_text='If applicable, the specific language in which the reporting must take place', null=True, verbose_name='Language of reporting')),
                ('frequency', models.TextField(blank=True, help_text='If applicable, the occurrence in which the reporting requirements take place', null=True, verbose_name='Language of reporting')),
                ('payment_obligation', models.TextField(blank=True, help_text='If applicable, a description of the payment obligations associated with the reporting,                 as well as the applicable rates.', null=True, verbose_name='Payment obligations and rates')),
                ('refund_possibilities', models.TextField(blank=True, help_text='If applicable, a description of the possibility to request a refund and                 the applicable criteria that need to be met.', null=True, verbose_name='Language of reporting')),
                ('deadline', models.TextField(blank=True, help_text='The due date by which the responsible party must comply with the reporting requirements', null=True, verbose_name='Deadline')),
                ('retainment_of_records', models.TextField(blank=True, help_text='If applicable, a description on the requirement to maintain records for                 a specified time, as well as which information must be archived.', null=True, verbose_name='Retainment of records')),
                ('threshold', models.TextField(blank=True, help_text='If applicable, the minimum criteria that must be met before the reporting requirements apply,                 as well as phase-in provisions', null=True, verbose_name='Threshold')),
                ('sanctions', models.TextField(blank=True, help_text='If applicable, the penalties or consequences imposed as a result of non-compliance', null=True, verbose_name='Sanctions')),
                ('exemptions', models.TextField(blank=True, help_text='If applicable, the specific conditions under which the reporting requirements do not apply', null=True, verbose_name='Exemptions')),
                ('way_of_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='way_of_submission', to='navigator.wayofsubmission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegislationJobRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('why', models.TextField(max_length=2000)),
                ('what', models.TextField(max_length=2000)),
                ('example', models.TextField(max_length=2000)),
                ('job_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.jobrole')),
                ('legislation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='navigator.legislation')),
            ],
        ),
        migrations.AddField(
            model_name='legislation',
            name='non_compliance_consequence',
            field=models.ManyToManyField(help_text='Select the relevant consequences that may follow from non-compliance with this legislation', related_name='non_compliance_consequence', to='navigator.noncomplianceconsequence', verbose_name='Consequences of non-compliance'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='product_service',
            field=models.ManyToManyField(help_text='If applicable, specify whether the legislation applies to specific                     products and/ or services', related_name='product_service', to='navigator.productservice', verbose_name='Relevant product (group) or services'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='pwc_contact',
            field=models.ManyToManyField(blank=True, help_text='Who within PwC is the person of contact for this legislation', related_name='pwc_contact', to=settings.AUTH_USER_MODEL, verbose_name='Relevant PwC contact'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='registration_requirements',
            field=models.ManyToManyField(help_text='Registration requirements refer to the process of officially enrolling or recording                 certain information with a relevant authority or organization.                 It typically involves providing specific details about an individual,                 entity, or activity to establish legal recognition or compliance', related_name='registration_requirements', to='navigator.registrationrequirement', verbose_name='Registration Requirements'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='regulatory_requirements',
            field=models.ManyToManyField(help_text='Regulatory requirements are rules, standards, or obligations established to govern                 activities or entities that must be complied with.', related_name='regulatory_requirements', to='navigator.regulatoryrequirement', verbose_name='Regulatory Requirements'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='reporting_requirements',
            field=models.ManyToManyField(help_text='Reporting requirements are rules, or obligations on either submitting information                 to an external party such as a a relevant authority or organization, as well as                 rules or obligations on publishing information in for instance an annual statement                 or on a website', related_name='reporting_requirements', to='navigator.reportingrequirement', verbose_name='Reporting Requirements'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='topic',
            field=models.ManyToManyField(help_text='Select the relevant topics from the drop-down menu', related_name='topic', to='navigator.topic', verbose_name='Topic'),
        ),
        migrations.AddField(
            model_name='legislation',
            name='type',
            field=models.ManyToManyField(help_text='For example Regulation, Directive, Act, Decree, etc', related_name='legislation_type', to='navigator.legislationtype', verbose_name='Legislation Type'),
        ),
        migrations.AddConstraint(
            model_name='legislationjobrole',
            constraint=models.UniqueConstraint(fields=('legislation', 'job_role'), name='unique_legislation_job_role'),
        ),
    ]
