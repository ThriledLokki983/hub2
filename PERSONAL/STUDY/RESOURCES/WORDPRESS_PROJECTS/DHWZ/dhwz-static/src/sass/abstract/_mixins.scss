// Transition Mixin
@mixin transition-ease {
	transition: all 0.3s ease-in-out;
}

// default layout which will also restrict the content within a specified width and center the content
@mixin container {
	--width: min(85%, var(--restricted-width));
	width: var(--width);
	margin-inline: auto;

	// @include respond(1100px) {
	// 	--width: min(95%, var(--restricted-width));
	// }

	// @media (max-width: 50em) {
	// 	--width: min(90%, var(--restricted-width));
	// }
}

// Media queries
@mixin respond($breakpoint) {
	@media only screen and (max-width: $breakpoint) {
		@content;
	}
}

/*
* Create an intrinsically responsive grid layout, optionally using a CSS custom  property to extend to variable contexts. Each column will resize at the same rate, and items will begin to break to a new row if the width reaches the --min/$width value.
*/
@mixin grid-auto-layout($width: 15ch) {
	--gap: clamp(1rem, 1.5vw + 1rem, 3rem);

	display: grid;
	grid-template-columns: repeat(
		auto-fit,
		minmax(min(var(--max-width), $width), 1fr)
	);
	grid-auto-flow: row;
	grid-gap: var(--gap);
	grid-auto-rows: 1fr;
}
